version: '3.8'

services:
  browser-render:
    # GitHubからクローンして自動ビルド
    build:
      context: https://github.com/yhonda-ohishi/browser_render_go.git
      dockerfile: Dockerfile
    container_name: browser-render-server
    environment:
      # 認証情報を設定してください
      - USER_NAME=${USER_NAME:-your_username}
      - COMP_ID=${COMP_ID:-your_company_id}
      - USER_PASS=${USER_PASS:-your_password}
      - HTTP_PORT=8080
      - BROWSER_HEADLESS=true
      - BROWSER_DEBUG=false
      - SQLITE_PATH=/app/data/browser_render.db
      - SESSION_TTL=10m
      - COOKIE_TTL=24h
    ports:
      - "8080:8080"
    volumes:
      - browser-data:/app/data
      - browser-logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # スケジューラ: 10分おきに Venus データ取得API実行
  scheduler:
    image: alpine:latest
    container_name: browser-render-scheduler
    environment:
      - API_URL=http://browser-render:8080
      - CRON_SCHEDULE=${CRON_SCHEDULE:-*/10 * * * *}  # 10分おき (環境変数で変更可能)
    command: >
      sh -c "
        apk add --no-cache curl &&
        echo '*/10 * * * * curl -s http://browser-render:8080/v1/vehicle/data || echo \"Venus API call failed at \$(date)\"' > /etc/crontabs/root &&
        echo 'Scheduler started with cron: */10 * * * *' &&
        crond -f -d 8
      "
    restart: unless-stopped
    depends_on:
      - browser-render

volumes:
  browser-data:
  browser-logs: